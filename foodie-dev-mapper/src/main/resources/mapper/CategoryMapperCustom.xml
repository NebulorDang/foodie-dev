<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.imooc.mapper.CategoryMapperCustom" >
  <resultMap id="myCategoryVO" type="com.imooc.pojo.vo.CategoryVO">
    <!-- colum对应sql里面as之后的驼峰命名, property对应实体类 -->
    <id column="id" property="id"/>
    <result column="name" property="name"/>
    <result column="type" property="type"/>
    <result column="fatherId" property="fatherId"/>

    <!-- 三级分类的列表 subCatList，是Category类中的一个字段，ofType是对应的类-->
    <!--
      collection 标签：用于定义关联的list集合类型的封装规则
      property：对应三级分类的list属性名
      ofType：集合的类型，三级分类的vo
    -->
    <collection property="subCatList" ofType="com.imooc.pojo.vo.SubCategoryVO">
      <id column="subId" property="subId"/>
      <result column="subName" property="subName"/>
      <result column="subType" property="subType"/>
      <result column="subFatherId" property="subFatherId"/>
    </collection>

  </resultMap>

  <select id="getSubCatList" resultMap="myCategoryVO" parameterType="int">
    SELECT
      f.id as id,
      f.`name` as `name`,
      f.type as type,
      f.father_id as fatherId,
      c.id as subId,
      c.`name` as subName,
      c.type as subType,
      c.father_id as subFatherId
    FROM
      category f
        LEFT JOIN
      category c
      on
        f.id = c.father_id
    WHERE
      f.father_id = #{rootCatId}
  </select>

  <resultMap id="myNewItemsVO" type="com.imooc.pojo.vo.NewItemsVO">
    <!-- colum对应sql里面as之后的驼峰命名, property对应实体类 -->
    <id column="rootCatId" property="rootCatId"/>
    <result column="rootCatName" property="rootCatName"/>
    <result column="slogan" property="slogan"/>
    <result column="catImage" property="catImage"/>
    <result column="bgColor" property="bgColor"/>

    <collection property="simpleItemList" ofType="com.imooc.pojo.vo.SimpleItemsVO">
      <id column="itemId" property="itemId"/>
      <result column="itemName" property="itemName"/>
      <result column="itemUrl" property="itemUrl"/>
      <result column="createdTime" property="createdTime"/>
    </collection>
  </resultMap>

  <select id="getSixNewItemsLazy" resultMap="myNewItemsVO" parameterType="Map">
    SELECT
      f.id as rootCatId,
      f.`name` as rootCatName,
      f.slogan as slogan,
      f.cat_image as catImage,
      f.bg_color as bgColor,
      i.id as itemId,
      i.item_name as itemName,
      ii.url as itemUrl,
      i.created_time as createdTime
    FROM
      category f
    LEFT JOIN items i ON f.id = i.root_cat_id
    LEFT JOIN items_img ii on i.id = ii.item_id
    where
      f.type = 1
    AND
      i.root_cat_id = #{paramsMap.rootCatId}
    AND
      ii.is_main = 1
    ORDER BY
      i.created_time
    DESC
    LIMIT 0,6
  </select>
</mapper>